{"version":3,"sources":["components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/c2-SuperButton/SuperButton.module.css","components/common/c1-SuperInputText/SuperInputText.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/common/c2-SuperButton/SuperButton.tsx","components/Login/Login.tsx","components/Profile/Profile.tsx","components/Registration/Registration.tsx","components/RestorPassword/RestorPassword.tsx","components/TestPage/TestPage.tsx","components/InputPassword/InputPassword.tsx","components/Error404/Error404.tsx","App.tsx","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","SuperButton","red","finalClassName","default","Login","Profile","Registration","RestorPassword","TestPage","InputPassword","Error404","App","path","render","ReactDOM","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,+JCyDhDC,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAC,EAIH,EAJGA,UAAWC,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBE,GAAgC,IACnEI,EAAmB,UAAMD,IAAEE,WAAR,YAAsBN,GAE/C,OACI,qCACI,mCACIN,KAAM,OACNC,SArBa,SAACY,GACtBZ,GACGA,EAASY,GAEZX,GAAgBA,EAAaW,EAAEC,cAAcC,QAkBrCZ,WAhBe,SAACU,GACxBV,GAAcA,EAAWU,GAEzBT,GACa,UAAVS,EAAEG,KACFZ,KAYKE,UAAWK,GAEPH,IAEPH,GAAS,sBAAMC,UAAWG,EAAjB,SAAsCJ,Q,iBCZ7CY,EA9ByC,SAAC,GASpD,EAPGjB,KAOH,EANGC,SAMH,EANaiB,gBAMZ,IALEZ,EAKH,EALGA,UACAa,GAIH,EALcZ,cAKd,EAJGY,UAEGX,EAEN,4FAKKG,EAAmB,UAAMD,IAAEU,SAAR,YAAoBd,GAAwB,IAErE,OACI,kCACI,mCACIN,KAAM,WACNC,SAVa,SAACY,KAWdP,UAAWK,GAEPH,IAEPW,GAAY,sBAAMb,UAAWI,IAAEH,cAAnB,SAAmCY,Q,iBCV7CE,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKhB,EAGR,EAHQA,UACFE,EAEN,mCACKe,EAAc,UAAMD,EAAMZ,IAAEY,IAAMZ,IAAEc,QAAtB,YAAiClB,GAErD,OACI,oCACIA,UAAWiB,GACPf,K,OCnBHiB,EAAQ,WACjB,OACI,yCCFKC,EAAU,WACnB,OACI,2CCFKC,EAAe,WACxB,OACI,gDCFKC,EAAiB,WAC1B,OACI,kDCFKC,EAAW,WACpB,OACI,4CCFKC,EAAgB,WACzB,OACI,iDCFKC,EAAW,WACpB,OACI,4CCqCOC,MA3Bf,WACI,OACI,sBAAK1B,UAAU,MAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2B,KAAM,SACNC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAM,WACNC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAM,gBACNC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAM,kBACNC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAM,YACNC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAM,iBACNC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAM,IACNC,OAAQ,kBAAM,cAAC,EAAD,UAGzB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QC7BZC,IAASD,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJE,SAASC,eAAe,W","file":"static/js/main.667475fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3IT9-\",\"errorInput\":\"SuperInputText_errorInput__2ssGj\",\"error\":\"SuperInputText_error__3rAb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2qa9F\",\"spanClassName\":\"SuperCheckbox_spanClassName__AxGBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__317Fw\",\"red\":\"SuperButton_red__3_jpi\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","\r\n\r\nexport const Login = () => {\r\n    return(\r\n        <div>\r\n            login\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const Profile = () => {\r\n    return(\r\n        <div>\r\nprofile\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const Registration = () => {\r\n    return(\r\n        <div>\r\n            Registration\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const RestorPassword = () => {\r\n    return(\r\n        <div>\r\n            RestorPassword\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const TestPage = () => {\r\n    return(\r\n        <div>\r\n            TestPage\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const InputPassword = () => {\r\n    return(\r\n        <div>\r\n            InputPassword\r\n        </div>\r\n    )\r\n}","import {createSecretKey} from 'crypto';\r\n\r\nexport const Error404 = () => {\r\n    return(\r\n        <div>\r\n            Error404\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport SuperInputText\n    from './components/common/c1-SuperInputText/SuperInputText';\nimport SuperCheckbox from './components/common/c3-SuperCheckbox/SuperCheckbox';\nimport SuperButton from './components/common/c2-SuperButton/SuperButton';\nimport {Route, Switch} from 'react-router-dom';\nimport {Login} from './components/Login/Login';\nimport {Profile} from './components/Profile/Profile';\nimport {Registration} from './components/Registration/Registration';\nimport {RestorPassword} from './components/RestorPassword/RestorPassword';\nimport {TestPage} from './components/TestPage/TestPage';\nimport {InputPassword} from './components/InputPassword/InputPassword';\nimport {Error404} from './components/Error404/Error404';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path={'/login'}\n                       render={() => <Login/>}/>\n                <Route path={'/profile'}\n                       render={() => <Profile/>}/>\n                <Route path={'/registration'}\n                       render={() => <Registration/>}/>\n                <Route path={'/restorpassword'}\n                       render={() => <RestorPassword/>}/>\n                <Route path={'/testPage'}\n                       render={() => <TestPage/>}/>\n                <Route path={'/inputpassword'}\n                       render={() => <InputPassword/>}/>\n                <Route path={'*'}\n                       render={() => <Error404/>}/>\n            </Switch>\n\n            <SuperInputText/>\n            <SuperCheckbox/>\n            <SuperButton/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}